BUGS

- there is no back pressure if there are no physical registers, just panic
    - each instruction should track how many physical registers it needs to allocate
    and don't allow for an instruction to get a rs if there are not sufficient
    physical registers.

- restore the 'control' instr

- store to load forwarding: currently the store in the sb isn't seen so CPU becomes incoherent

- SDIV proper division by zero handling

- fix parsing of instructions that modify the control flow implicitly (so when accessing e.g. IP)

- fix EXIT

TODO


- the AST operands should get their own visit methods

- fix register to string

- fix address of operand

- cdb_broadcast_buffer filling should be done in execute

- program/loader should not construct 'Instr'; they are CPU internal detail for decoded instructions

- add ConditionCode operand

- add CSINC

- add CSEL

- add CSET

- clean up the pc_update in the B.. methods

- integration test: stack push

- integration test: stack pop

- Backend.cycle_eu_table should move to EUTable.

- option to disable speculative execution

- dedicated EU for ALU, LOAD/STORE etc

- optimize the flush of the ROB (idle entries can be skipped)

- syntax: add support for loading a binary

- syntax: case insensitive keywords

- syntax: single line comments

- syntax: multiline comment

- syntax: new lines

- syntax: unwanted semicolon after instructions

DONE

- fix error handling of instruction parsing



TODO


- every instruction should have address so that we know its position

- inconsistent usage of pub/pub(crate)

- add DSB

- can the B instruction be optimized since the branch is always taken. Currently it will stop placing
 instructions in the instruction queue until B has retired and this leads to a stall.

- unit tests!

- integration tests!

- support for precise exceptions

- syntax: case insensitive keywords/registers

- syntax: single line comments

- syntax: multiline comment

- syntax: new lines

- syntax: unwanted semicolon after instructions

- instruction print should use labels

- instructions should keep their labels

- store to load forwarding: currently the store in the sb isn't seen

- implement print of memory

- CPU metrics frequency:
    - currently it is tied to the CPU frequency; but at higher frequency, the output will go too fast.

DONE

- BEQ

- BNE

- BLE

- BLT

- BGE

- BGT

- fix NOT instruction

- add the CPSR (needed for CMP and relevant ops to work)

- configurable asm file

- cpu config from Yaml file

- configurable cpu config

- loader: ast operand should have access to its pos

- labels: unwanted behavior that labels need to start with an _ Even though it isn't part of a label name

- loader: validate memory access

- loader: every instruction should have an optional label in front of it

- loader: label names with underscores

- loader: variable names with underscores

- MemRegisterIndirect
